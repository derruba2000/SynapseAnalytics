{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "asaworkspace471731"
		},
		"asadatalake01_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'asadatalake01'"
		},
		"asastore01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asastore01'"
		},
		"asaworkspace471731-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asaworkspace471731-WorkspaceDefaultSqlServer'"
		},
		"sqlpool01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01'"
		},
		"CognitiveRESTEndpoint_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cogs-471731.cognitiveservices.azure.com/"
		},
		"CognitiveService_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "530679ad-9ffd-4ae6-a38b-207c37db3e87"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvault-471731.vault.azure.net"
		},
		"asadatalake01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalake471731.dfs.core.windows.net"
		},
		"asaworkspace471731-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalake471731.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 2 - Enrich Data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Pipeline for enriching data from DimCustomer with additional location information from an external data source.",
				"activities": [
					{
						"name": "Enrich Customer Data",
						"description": "Data flow that enriches the data from the DimCustomer table with location information from an external data source. The enriched data is then copied to a staging table in Azure Synapse Analytics.",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Import Customer dimension",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EnrichCustomerData",
								"type": "DataFlowReference",
								"parameters": {
									"UniqueId": {
										"value": "'@{substring(pipeline().RunId,0,8)}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"PostalCodes": {},
									"DimCustomer": {
										"UniqueId": {
											"value": "@substring(pipeline().RunId,0,8)",
											"type": "Expression"
										}
									},
									"EnrichedCustomerData": {
										"UniqueId": {
											"value": "@substring(pipeline().RunId,0,8)",
											"type": "Expression"
										}
									},
									"EnrichedCustomerDataAdls": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 48,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Import Customer dimension",
						"description": "Copies Customer data from files stored in a data lake, renames columns, and inserts the data into a staging version of the DimCustomer table in Azure Synapse Analytics.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dev/bronze/wwi-dimcustomer.csv"
							},
							{
								"name": "Destination",
								"value": "wwi_staging.@{concat('DimCustomer_',substring(pipeline().RunId,0,8))}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asadatalake01",
									"type": "LinkedServiceReference"
								},
								"path": "staging",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bill To Customer",
											"type": "String"
										},
										"sink": {
											"name": "BillToCustomer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Group",
											"type": "String"
										},
										"sink": {
											"name": "BuyingGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcustomer_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_staging_dimcustomer_asa",
								"type": "DatasetReference",
								"parameters": {
									"UniqueId": {
										"value": "@substring(pipeline().RunId,0,8)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ReadComments",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "wwi_comments_adls",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachComment",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadComments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadComments').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Sentiment Analysis",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\n\t\"documents\": [\n\t\t{\n\t\t\t\"id\": \"@{item().id}\",\n\t\t\t\"language\": \"en\",\n\t\t\t\"text\": \"@{item().comment}\"\n\t\t}\n\t]\n}\n",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Content-Type": "application/json",
												"Ocp-Apim-Subscription-Key": "b1c9e29bf7bc4ff7967b45f57e400e14"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cognitive_rest_dataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "wwi_sentiments_adls",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-15T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/EnrichCustomerData')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_comments_adls')]",
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]",
				"[concat(variables('workspaceId'), '/datasets/cognitive_rest_dataset')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_sentiments_adls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Data - Fact Sale Full')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactSale",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factsale_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-15T06:25:41Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_asa')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Import City dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimCity",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI City ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICityID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State Province",
											"type": "String"
										},
										"sink": {
											"name": "StateProvince",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Continent",
											"type": "String"
										},
										"sink": {
											"name": "Continent",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sales Territory",
											"type": "String"
										},
										"sink": {
											"name": "SalesTerritory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Subregion",
											"type": "String"
										},
										"sink": {
											"name": "Subregion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Latest Recorded Population",
											"type": "Int32"
										},
										"sink": {
											"name": "LatestRecordedPopulation",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcity_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimcity_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Customer dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimCustomer",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bill To Customer",
											"type": "String"
										},
										"sink": {
											"name": "BillToCustomer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Group",
											"type": "String"
										},
										"sink": {
											"name": "BuyingGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcustomer_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimcustomer_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Date dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimDate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Day Number",
											"type": "Int32"
										},
										"sink": {
											"name": "DayNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String"
										},
										"sink": {
											"name": "Day",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Short Month",
											"type": "String"
										},
										"sink": {
											"name": "ShortMonth",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Calendar Month Number",
											"type": "Int32"
										},
										"sink": {
											"name": "CalendarMonthNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Calendar Month Label",
											"type": "String"
										},
										"sink": {
											"name": "CalendarMonthLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Calendar Year",
											"type": "Int32"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Calendar Year Label",
											"type": "String"
										},
										"sink": {
											"name": "CalendarYearLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal Month Number",
											"type": "Int32"
										},
										"sink": {
											"name": "FiscalMonthNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fiscal Month Label",
											"type": "String"
										},
										"sink": {
											"name": "FiscalMonthLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal Year",
											"type": "Int32"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fiscal Year Label",
											"type": "String"
										},
										"sink": {
											"name": "FiscalYearLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ISO Week Number",
											"type": "Int32"
										},
										"sink": {
											"name": "ISOWeekNumber",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimdate_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimdate_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Employee dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimEmployee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Employee Key",
											"type": "Int32"
										},
										"sink": {
											"name": "EmployeeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Employee ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIEmployeeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Employee",
											"type": "String"
										},
										"sink": {
											"name": "Employee",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Preferred Name",
											"type": "String"
										},
										"sink": {
											"name": "PreferredName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Is Salesperson",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsSalesperson",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimemployee_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimemployee_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Payment Method dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimPaymentMethod",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Payment Method Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentMethodKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Payment Method ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPaymentMethodID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Payment Method",
											"type": "String"
										},
										"sink": {
											"name": "PaymentMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimpaymentmethod_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimpaymentmethod_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Stock Item dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimStockItem",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Stock Item ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIStockItemID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item",
											"type": "String"
										},
										"sink": {
											"name": "Stock Item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Selling Package",
											"type": "String"
										},
										"sink": {
											"name": "SellingPackage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Package",
											"type": "String"
										},
										"sink": {
											"name": "Buying Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String"
										},
										"sink": {
											"name": "Brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Lead Time Days",
											"type": "Int32"
										},
										"sink": {
											"name": "LeadTimeDays",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity Per Outer",
											"type": "Int32"
										},
										"sink": {
											"name": "QuantityPerOuter",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Is Chiller Stock",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsChillerStock",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Barcode",
											"type": "String"
										},
										"sink": {
											"name": "Barcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Recommended Retail Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "RecommendedRetailPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Typical Weight Per Unit",
											"type": "Decimal"
										},
										"sink": {
											"name": "TypicalWeightPerUnit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimstockitem_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimstockitem_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Supplier dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimSupplier",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Supplier ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWISupplierID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier",
											"type": "String"
										},
										"sink": {
											"name": "Supplier",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Reference",
											"type": "String"
										},
										"sink": {
											"name": "SupplierReference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Payment Days",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentDays",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimsupplier_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimsupplier_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Transaction Type dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimTransactionType",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Transaction Type ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWITransactionTypeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimtransactiontype_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimtransactiontype_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Movement fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactMovement",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "String"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Stock Item Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIStockItemTransactionID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factmovement_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factmovement_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Order fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactOrder",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Order Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Picked Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "PickedDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Picker Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PickerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Backorder ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIBackorderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factorder_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factorder_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Purchase fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactPurchase",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ordered Outers",
											"type": "Int32"
										},
										"sink": {
											"name": "OrderedOuters",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ordered Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "OrderedQuantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Received Outers",
											"type": "Int32"
										},
										"sink": {
											"name": "ReceivedOuters",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Is Order Finalized",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsOrderFinalized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factpurchase_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factpurchase_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Stock Holding fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactStockHolding",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity On Hand",
											"type": "Int32"
										},
										"sink": {
											"name": "QuantityOnHand",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bin Location",
											"type": "String"
										},
										"sink": {
											"name": "BinLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Stocktake Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "LastStocktakeQuantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Last Cost Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "LastCostPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Reorder Level",
											"type": "Int32"
										},
										"sink": {
											"name": "ReorderLevel",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Target Stock Level",
											"type": "Int32"
										},
										"sink": {
											"name": "TargetStockLevel",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factstockholding_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factstockholding_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Transaction fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactTransaction",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Payment Method Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentMethodKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerTransaction ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Supplier Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWISupplierTransaction ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Invoice Number",
											"type": "String"
										},
										"sink": {
											"name": "SupplierInvoiceNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Outstanding Balance",
											"type": "Decimal"
										},
										"sink": {
											"name": "OutstandingBalance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Is Finalized",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsFinalized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_facttransaction_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_facttransaction_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-15T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcity_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcity_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimdate_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimdate_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimemployee_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimemployee_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimpaymentmethod_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimpaymentmethod_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimstockitem_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimstockitem_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimsupplier_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimsupplier_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimtransactiontype_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimtransactiontype_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factmovement_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factmovement_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factorder_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factorder_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factpurchase_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factpurchase_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factstockholding_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factstockholding_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_facttransaction_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_facttransaction_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Perf Data - Fact Sale Fast')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data part 1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_1_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_2_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_4_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_3_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-15T06:25:45Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_1_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_perf_factsale_fast_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_2_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_4_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_3_adls')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Perf Data - Fact Sale Slow')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data part 1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_1_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_2_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_4_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_3_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-15T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_1_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_perf_factsale_slow_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_2_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_4_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_3_adls')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cognitive_rest_dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CognitiveRESTEndpoint",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "text/analytics/v3.1-preview.3/sentiment?opinionMining=true"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CognitiveRESTEndpoint')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/external_postalcode_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "postalcodes.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Timezone",
						"type": "String"
					},
					{
						"name": "DST",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/staging_enrichedcustomer_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer",
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_comments_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-comments.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcity_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimcity.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "WWI City ID",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State Province",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Continent",
						"type": "String"
					},
					{
						"name": "Sales Territory",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Subregion",
						"type": "String"
					},
					{
						"name": "Latest Recorded Population",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcity_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Continent",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritory",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Subregion",
						"type": "nvarchar"
					},
					{
						"name": "LatestRecordedPopulation",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimCity"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcustomer_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimcustomer.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "WWI Customer ID",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Bill To Customer",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Buying Group",
						"type": "String"
					},
					{
						"name": "Primary Contact",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "BillToCustomer",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "BuyingGroup",
						"type": "nvarchar"
					},
					{
						"name": "PrimaryContact",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimdate_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimdate.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Day Number",
						"type": "String"
					},
					{
						"name": "Day",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Short Month",
						"type": "String"
					},
					{
						"name": "Calendar Month Number",
						"type": "String"
					},
					{
						"name": "Calendar Month Label",
						"type": "String"
					},
					{
						"name": "Calendar Year",
						"type": "String"
					},
					{
						"name": "Calendar Year Label",
						"type": "String"
					},
					{
						"name": "Fiscal Month Number",
						"type": "String"
					},
					{
						"name": "Fiscal Month Label",
						"type": "String"
					},
					{
						"name": "Fiscal Year",
						"type": "String"
					},
					{
						"name": "Fiscal Year Label",
						"type": "String"
					},
					{
						"name": "ISO Week Number",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimdate_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "DayNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Day",
						"type": "nvarchar"
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "ShortMonth",
						"type": "nvarchar"
					},
					{
						"name": "CalendarMonthNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarMonthLabel",
						"type": "nvarchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYearLabel",
						"type": "nvarchar"
					},
					{
						"name": "FiscalMonthNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthLabel",
						"type": "nvarchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalYearLabel",
						"type": "nvarchar"
					},
					{
						"name": "ISOWeekNumber",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimemployee_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimemployee.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Employee Key",
						"type": "String"
					},
					{
						"name": "WWI Employee ID",
						"type": "String"
					},
					{
						"name": "Employee",
						"type": "String"
					},
					{
						"name": "Preferred Name",
						"type": "String"
					},
					{
						"name": "Is Salesperson",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimemployee_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIEmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Employee",
						"type": "nvarchar"
					},
					{
						"name": "PreferredName",
						"type": "nvarchar"
					},
					{
						"name": "IsSalesperson",
						"type": "bit"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimpaymentmethod_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimpaymentmethod.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Payment Method Key",
						"type": "String"
					},
					{
						"name": "WWI Payment Method ID",
						"type": "String"
					},
					{
						"name": "Payment Method",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimpaymentmethod_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PaymentMethodKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPaymentMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentMethod",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimPaymentMethod"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimstockitem_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimstockitem.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "WWI Stock Item ID",
						"type": "String"
					},
					{
						"name": "Stock Item",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "Selling Package",
						"type": "String"
					},
					{
						"name": "Buying Package",
						"type": "String"
					},
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Lead Time Days",
						"type": "String"
					},
					{
						"name": "Quantity Per Outer",
						"type": "String"
					},
					{
						"name": "Is Chiller Stock",
						"type": "String"
					},
					{
						"name": "Barcode",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Recommended Retail Price",
						"type": "String"
					},
					{
						"name": "Typical Weight Per Unit",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimstockitem_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIStockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Item",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SellingPackage",
						"type": "nvarchar"
					},
					{
						"name": "Buying Package",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "LeadTimeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityPerOuter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsChillerStock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RecommendedRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TypicalWeightPerUnit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimStockItem"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimsupplier_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimsupplier.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "WWI Supplier ID",
						"type": "String"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Primary Contact",
						"type": "String"
					},
					{
						"name": "Supplier Reference",
						"type": "String"
					},
					{
						"name": "Payment Days",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimsupplier_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWISupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Supplier",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "PrimaryContact",
						"type": "nvarchar"
					},
					{
						"name": "SupplierReference",
						"type": "nvarchar"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimSupplier"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimtransactiontype_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimtransactiontype.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "WWI Transaction Type ID",
						"type": "String"
					},
					{
						"name": "Transaction Type",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimtransactiontype_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWITransactionTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionType",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimTransactionType"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factmovement_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factmovement.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Movement Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "WWI Stock Item Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factmovement_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "MovementKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIStockItemTransactionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactMovement"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factorder_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factorder.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Order Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Order Date Key",
						"type": "String"
					},
					{
						"name": "Picked Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "Picker Key",
						"type": "String"
					},
					{
						"name": "WWI Order ID",
						"type": "String"
					},
					{
						"name": "WWI Backorder ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factorder_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "OrderKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "date"
					},
					{
						"name": "PickedDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIBackorderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactOrder"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factpurchase_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factpurchase.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Purchase Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Ordered Outers",
						"type": "String"
					},
					{
						"name": "Ordered Quantity",
						"type": "String"
					},
					{
						"name": "Received Outers",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Is Order Finalized",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factpurchase_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PurchaseKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedQuantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReceivedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "IsOrderFinalized",
						"type": "bit"
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactPurchase"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactSale"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_1_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-1.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_2_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-2.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_3_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-3.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_4_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-4.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factstockholding_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factstockholding.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Stock Holding Key|Stock Item Key|Quantity On Hand|Bin Location|Last Stocktake Quantity|Last Cost Price|Reorder Level|Target Stock Level|Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factstockholding_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "StockHoldingKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityOnHand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BinLocation",
						"type": "nvarchar"
					},
					{
						"name": "LastStocktakeQuantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastCostPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReorderLevel",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TargetStockLevel",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactStockHolding"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_facttransaction_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-facttransaction.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Transaction Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "Payment Method Key",
						"type": "String"
					},
					{
						"name": "WWI Customer Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Supplier Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Supplier Invoice Number",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Outstanding Balance",
						"type": "String"
					},
					{
						"name": "Is Finalized",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_facttransaction_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentMethodKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICustomerTransaction ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWISupplierTransaction ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierInvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OutstandingBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "IsFinalized",
						"type": "bit"
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactTransaction"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_perf_factsale_fast_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi_perf",
					"table": "FactSale_Fast"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_perf_factsale_slow_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi_perf",
					"table": "FactSale_Slow"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_sentiments_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/sentiment",
						"fileSystem": "dev"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_staging_dimcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"UniqueId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "wwi_staging",
					"table": {
						"value": "@concat('DimCustomer_',dataset().UniqueId)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_staging_enrichedcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"UniqueId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "wwi_staging",
					"table": {
						"value": "@concat('EnrichedCustomer_', dataset().UniqueId)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CognitiveRESTEndpoint')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('CognitiveRESTEndpoint_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CognitiveService')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CognitiveService",
				"typeProperties": {
					"subscriptionId": "[parameters('CognitiveService_properties_typeProperties_subscriptionId')]",
					"resourceGroup": "Synapse-AIAD-471731",
					"csName": "cogs-471731",
					"csKind": "CognitiveServices",
					"csLocation": "southeastasia",
					"endPoint": "https://cogs-471731.cognitiveservices.azure.com/",
					"csKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "CognitiveKey"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBIWorkspace')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "1dc99343-774f-4e18-a045-43211c97e019"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asadatalake01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asadatalake01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('asadatalake01_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asastore01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('asastore01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace471731-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('asaworkspace471731-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace471731-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asaworkspace471731-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EnrichCustomerData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "external_postalcode_adls",
								"type": "DatasetReference"
							},
							"name": "PostalCodes"
						},
						{
							"dataset": {
								"referenceName": "wwi_staging_dimcustomer_asa",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "wwi_staging_enrichedcustomer_asa",
								"type": "DatasetReference"
							},
							"name": "EnrichedCustomerData"
						},
						{
							"dataset": {
								"referenceName": "staging_enrichedcustomer_adls",
								"type": "DatasetReference"
							},
							"name": "EnrichedCustomerDataAdls"
						}
					],
					"transformations": [
						{
							"name": "PostalCodeFilter"
						},
						{
							"name": "JoinOnPostalCode"
						},
						{
							"name": "SelectDesiredColumns"
						}
					],
					"script": "parameters{\n\tUniqueId as string\n}\nsource(output(\n\t\tCity as string,\n\t\tState as string,\n\t\tZip as string,\n\t\tLatitude as double,\n\t\tLongitude as double,\n\t\tTimezone as short,\n\t\tDST as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PostalCodes\nsource(output(\n\t\tCustomerKey as integer,\n\t\tWWICustomerID as integer,\n\t\tCustomer as string,\n\t\tBillToCustomer as string,\n\t\tCategory as string,\n\t\tBuyingGroup as string,\n\t\tPrimaryContact as string,\n\t\tPostalCode as string,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tLineageKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCustomer\nPostalCodes filter(and(\n    greaterOrEqual(toInteger(Zip), 90000),\n    lesserOrEqual(toInteger(Zip), 98000)\n)) ~> PostalCodeFilter\nDimCustomer, PostalCodeFilter join(PostalCode == Zip,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinOnPostalCode\nJoinOnPostalCode select(mapColumn(\n\t\tCustomerKey,\n\t\tWWICustomerID,\n\t\tCustomer,\n\t\tBillToCustomer,\n\t\tCategory,\n\t\tBuyingGroup,\n\t\tPrimaryContact,\n\t\tPostalCode,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tLineageKey,\n\t\tCity,\n\t\tState,\n\t\tLatitude,\n\t\tLongitude,\n\t\tTimezone,\n\t\tDST\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDesiredColumns\nSelectDesiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tpartitionBy('hash', 1)) ~> EnrichedCustomerData\nSelectDesiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat('enrichedcustomer_', $UniqueId, '.parquet'))],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EnrichedCustomerDataAdls"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/external_postalcode_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_enrichedcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/staging_enrichedcustomer_adls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Admin_01_CreateCredential')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Admin"
				},
				"content": {
					"query": "CREATE DATABASE SQLOnDemand01\nCREATE CREDENTIAL [https://asadatalake471731.dfs.core.windows.net]\nWITH IDENTITY='User Identity';",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Admin_02_password')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Admin"
				},
				"content": {
					"query": "CREATE LOGIN [asa.sql.staging]\nWITH PASSWORD = 'password.1!!'\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Admin_03_AddRoles')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Admin"
				},
				"content": {
					"query": "CREATE USER [asa.sql.staging]\n    FOR LOGIN [asa.sql.staging]\n    WITH DEFAULT_SCHEMA = dbo\nGO\n\n-- Add user to the required roles\n\nEXEC sp_addrolemember N'db_datareader', N'asa.sql.staging'\nGO\n\nEXEC sp_addrolemember N'db_datawriter', N'asa.sql.staging'\nGO\n\nEXEC sp_addrolemember N'db_ddladmin', N'asa.sql.staging'\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Admin_03_user')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Admin"
				},
				"content": {
					"query": "CREATE USER [asaworkspace471731] FROM EXTERNAL PROVIDER;\n\n--Granting permission to the identity\nGRANT CONTROL ON DATABASE::SQLPool01 TO [asaworkspace471731];",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 1 - Read with SQL on-demand')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\r\n    COUNT(*)\r\nFROM\r\n    OPENROWSET(\r\n        BULK 'https://asadatalake471731.dfs.core.windows.net/wwi/factsale-csv/2012/Q1/*/*',\r\n \t\tFORMAT = 'CSV', \r\n\t\tFIELDTERMINATOR ='|', \r\n        FIELDQUOTE = '',\r\n\t\tFIRSTROW = 2\r\n    ) \r\nWITH \r\n    (\r\n        SalesKey BIGINT,\r\n        CityKey INT,\r\n        CustomerKey INT,\r\n        BillToCustomerKey INT,\r\n        StockItemKey INT,\r\n        DeliveryDateKey DATE,\r\n        SalesPersonKey INT,\r\n        WWIInvoiceID INT,\r\n        Description VARCHAR(200),\r\n        Package VARCHAR(10),\r\n        Quantity INT,\r\n        UnitPrice DECIMAL(6,2),\r\n        TaxRate DECIMAL(6,2),\r\n        TotalExcludingTax DECIMAL(6,2),\r\n        TaxAmount DECIMAL(6,2),\r\n        Profit DECIMAL(6,2),\r\n        TotalIncludingTax DECIMAL(6,2),\r\n        TotalDryItems INT,\r\n        TotalChillerItems INT,\r\n        LineageKey INT\r\n    ) as S",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 4 - Analyze Transactions')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \r\n    CustomerKey, \r\n    SUM(Quantity) as Quantity\r\nFROM \r\n    wwi.FactSale\r\nGROUP BY \r\n    CustomerKey",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 4 - Investigate query performance')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT  count(*) from wwi_perf.FactSale_Slow\r\n\r\nSELECT  count(*) from wwi_perf.FactSale_Fast\r\n\r\nSELECT\r\n    FS.CustomerKey\r\n    ,MIN(FS.Quantity) as MinQuantity\r\n    ,MAX(FS.Quantity) as MaxQuantity\r\n    ,AVG(FS.TaxRate) as AvgTaxRate\r\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\r\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\r\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\r\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\r\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\r\nFROM\r\n    wwi_perf.FactSale_Slow FS\r\n    join wwi.DimCity DC ON\r\n        DC.CityKey = FS.CityKey\r\nGROUP BY\r\n    FS.CustomerKey\r\n\r\nSELECT\r\n    FS.CustomerKey\r\n    ,MIN(FS.Quantity) as MinQuantity\r\n    ,MAX(FS.Quantity) as MaxQuantity\r\n    ,AVG(FS.TaxRate) as AvgTaxRate\r\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\r\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\r\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\r\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\r\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\r\nFROM\r\n    wwi_perf.FactSale_Fast FS\r\n    join wwi.DimCity DC ON\r\n        DC.CityKey = FS.CityKey\r\nGROUP BY\r\n    FS.CustomerKey",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Create Sample Data for Predict')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP TABLE [wwi].[SampleData]; \r\nGO\r\n\r\nCREATE TABLE [wwi].[SampleData] \r\n(\r\n    [customerkey] REAL, \r\n    [stockitemkey] REAL\r\n);\r\nGO\r\n\r\nINSERT INTO [wwi].[SampleData] ([customerkey], [stockitemkey])\r\nVALUES ( 11, 1 );\r\nGO\r\n\r\nSELECT * FROM [wwi].[SampleData];\r\nGO\r\n\r\nCREATE TABLE [wwi].[SampleData] \r\n(\r\n    [features] REAL,\r\n    [features2] REAL\r\n);\r\nGO\r\n\r\nINSERT INTO [wwi].[SampleData] ([features], [features2])\r\nVALUES ( 11, 1 );\r\nGO\r\n\r\nSELECT * FROM [wwi].[SampleData];\r\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Predict with model')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Retrieve the latest hex encoded ONNX model from the table\r\nDECLARE @model varbinary(max) = (SELECT Model FROM [wwi].[Models] WHERE Id = (SELECT Top(1) max(ID) FROM [wwi].[Models]));\r\n\r\n-- Run a prediction query\r\nSELECT d.*, p.*\r\nFROM PREDICT(MODEL = @model, DATA = [wwi].[SampleData] AS d) WITH (prediction real) AS p;\r\n\r\n-- Store a batch of predictions\r\nINSERT INTO PredictionResults\r\nSELECT d.*, p.Score\r\nFROM PREDICT(MODEL = @model, DATA = [wwi].[SampleData] AS d) WITH (prediction real) AS p;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Register model')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Use poly to load model into the model table\r\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'fQv2fKq#FN7r'\r\n\r\n-- Create a database scoped credential with Azure storage account key (not a Shared Access Signature) as the secret.\r\nCREATE DATABASE SCOPED CREDENTIAL StorageCredential\r\nWITH\r\nIDENTITY = 'SHARED ACCESS SIGNATURE'\r\n, SECRET = 'hlFAWqL+iR+wFUed4aILAPHmjEg0/FlK8IQqtnP5p5Z8KLmk049NnbucP/fRvJL19JCZtmcXoxGWHCIkY2nJkw=='\r\n;\r\n\r\n-- Create an external data source with CREDENTIAL option.\r\nCREATE EXTERNAL DATA SOURCE ModelStorage\r\nWITH\r\n( LOCATION = 'wasbs://models@asastore471731.blob.core.windows.net'\r\n, CREDENTIAL = StorageCredential\r\n, TYPE = HADOOP\r\n)\r\n;\r\nCREATE EXTERNAL FILE FORMAT csv\r\nWITH (\r\nFORMAT_TYPE = DELIMITEDTEXT,\r\nFORMAT_OPTIONS (\r\nFIELD_TERMINATOR = ',',\r\nSTRING_DELIMITER = '',\r\nDATE_FORMAT = '',\r\nUSE_TYPE_DEFAULT = False\r\n)\r\n);\r\n\r\n\r\nCREATE EXTERNAL TABLE [wwi_ml].[MLModelExt]\r\n(\r\n[Model] [varbinary](max) NULL\r\n)\r\nWITH\r\n(\r\nLOCATION='/hex' ,\r\nDATA_SOURCE = ModelStorage ,\r\nFILE_FORMAT = csv ,\r\nREJECT_TYPE = VALUE ,\r\nREJECT_VALUE = 0\r\n)\r\nGO\r\n\r\n-- Verify access by running query\r\nSELECT Model, 'A simple model.'\r\nFROM wwi_ml.MLModelExt\r\n\r\n\r\nCREATE TABLE [wwi_ml].[MLModel]\r\n(\r\n[Id] [int] IDENTITY(1,1) NOT NULL,\r\n[Model] [varbinary](max) NULL,\r\n[Description] [varchar](200) NULL\r\n)\r\nWITH\r\n(\r\nDISTRIBUTION = REPLICATE,\r\nheap\r\n)\r\nGO\r\n\r\nINSERT INTO [wwi_ml].[MLModel]\r\nSELECT Model, 'A linear regression model.'\r\nFROM [wwi_ml].[MLModelExt]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Admin"
				},
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE WwiDataADLS\nWITH (LOCATION = 'abfss://wwi@asadatalake471731.dfs.core.windows.net') ;\nGO\n\nCREATE EXTERNAL FILE FORMAT CsvFormat\nWITH ( \n    FORMAT_TYPE = DELIMITEDTEXT, \n    FORMAT_OPTIONS ( FIELD_TERMINATOR = ',', STRING_DELIMITER = '\"')\n);\nGO\n\nCREATE EXTERNAL TABLE QuarterlySales\nWITH (\n    LOCATION = 'quarterly-sales',\n    DATA_SOURCE = WwiDataADLS,\n    FILE_FORMAT = CsvFormat\n)\nAS\nSELECT \n     InvoiceYear,\n     InvoiceQuarter,\n     Sum(cast([Quantity] as int)) as SalesQuantity\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalake471731.dfs.core.windows.net/wwi/factsale-deltalake',\n        FORMAT = 'DELTA'\n    ) AS [result]\nWHERE InvoiceYear=2012\nGROUP BY\n     InvoiceYear,\n     InvoiceQuarter\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLOnDemand01",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task1_01_ReadfromCSV')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Exercise_01/Task1"
				},
				"content": {
					"query": "SELECT\n    COUNT(*)\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalake471731.dfs.core.windows.net/wwi/factsale-csv/2012/Q1/*/*',\n \t\tFORMAT = 'CSV', \n\t\tFIELDTERMINATOR ='|', \n        FIELDQUOTE = '',\n\t\tFIRSTROW = 2\n    ) \nWITH \n    (\n        SalesKey BIGINT,\n        CityKey INT,\n        CustomerKey INT,\n        BillToCustomerKey INT,\n        StockItemKey INT,\n        DeliveryDateKey DATE,\n        SalesPersonKey INT,\n        WWIInvoiceID INT,\n        Description VARCHAR(200),\n        Package VARCHAR(10),\n        Quantity INT,\n        UnitPrice DECIMAL(6,2),\n        TaxRate DECIMAL(6,2),\n        TotalExcludingTax DECIMAL(6,2),\n        TaxAmount DECIMAL(6,2),\n        Profit DECIMAL(6,2),\n        TotalIncludingTax DECIMAL(6,2),\n        TotalDryItems INT,\n        TotalChillerItems INT,\n        LineageKey INT\n    ) as S\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task1_02_Aggregation')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Exercise_01/Task1"
				},
				"content": {
					"query": "SELECT \n InvoiceYear,\n InvoiceQuarter,\n Sum(cast([Quantity] as int)) as SalesQuantity\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalake471731.dfs.core.windows.net/wwi/factsale-deltalake',\n         FORMAT = 'DELTA'\n    ) AS [result]\nWHERE InvoiceYear=2012\nGROUP BY\n     InvoiceYear,\n     InvoiceQuarter",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WWI-Reset-SQLPoolSchema')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create schema wwi\r\ngo\r\ncreate schema wwi_perf\r\ngo\r\ncreate schema wwi_staging\r\ngo\r\ncreate schema wwi_ml\r\ngo\r\n\r\nIF OBJECT_ID('wwi.DimCity', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimCity\r\nGO\r\n\r\n--Location was eliminated (data type geography not supported)\r\n\r\nCREATE TABLE [wwi].[DimCity]\r\n(\r\n    [CityKey] [int] NOT NULL,\r\n\t[WWICityID] [int] NOT NULL,\r\n\t[City] [nvarchar](50) NOT NULL,\r\n\t[StateProvince] [nvarchar](50) NOT NULL,\r\n\t[Country] [nvarchar](60) NOT NULL,\r\n\t[Continent] [nvarchar](30) NOT NULL,\r\n\t[SalesTerritory] [nvarchar](50) NOT NULL,\r\n\t[Region] [nvarchar](30) NOT NULL,\r\n\t[Subregion] [nvarchar](30) NOT NULL,\r\n\t[LatestRecordedPopulation] [bigint] NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimCustomer', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimCustomer\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimCustomer](\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[WWICustomerID] [int] NOT NULL,\r\n\t[Customer] [nvarchar](100) NOT NULL,\r\n\t[BillToCustomer] [nvarchar](100) NOT NULL,\r\n\t[Category] [nvarchar](50) NOT NULL,\r\n\t[BuyingGroup] [nvarchar](50) NOT NULL,\r\n\t[PrimaryContact] [nvarchar](50) NOT NULL,\r\n\t[PostalCode] [nvarchar](10) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimDate', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimDate\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimDate](\r\n\t[Date] [date] NOT NULL,\r\n\t[DayNumber] [int] NOT NULL,\r\n\t[Day] [nvarchar](10) NOT NULL,\r\n\t[Month] [nvarchar](10) NOT NULL,\r\n\t[ShortMonth] [nvarchar](3) NOT NULL,\r\n\t[CalendarMonthNumber] [int] NOT NULL,\r\n\t[CalendarMonthLabel] [nvarchar](20) NOT NULL,\r\n\t[CalendarYear] [int] NOT NULL,\r\n\t[CalendarYearLabel] [nvarchar](10) NOT NULL,\r\n\t[FiscalMonthNumber] [int] NOT NULL,\r\n\t[FiscalMonthLabel] [nvarchar](20) NOT NULL,\r\n\t[FiscalYear] [int] NOT NULL,\r\n\t[FiscalYearLabel] [nvarchar](10) NOT NULL,\r\n\t[ISOWeekNumber] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimEmployee', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimEmployee\r\nGO\r\n\r\n-- Photo was eliminated (data type varbinary cannot participate in a columnstore index)\r\n\r\nCREATE TABLE [wwi].[DimEmployee](\r\n\t[EmployeeKey] [int] NOT NULL,\r\n\t[WWIEmployeeID] [int] NOT NULL,\r\n\t[Employee] [nvarchar](50) NOT NULL,\r\n\t[PreferredName] [nvarchar](50) NOT NULL,\r\n\t[IsSalesperson] [bit] NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimPaymentMethod', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimPaymentMethod\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimPaymentMethod](\r\n\t[PaymentMethodKey] [int] NOT NULL,\r\n\t[WWIPaymentMethodID] [int] NOT NULL,\r\n\t[PaymentMethod] [nvarchar](50) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimStockItem', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimStockItem\r\nGO\r\n\r\n-- Photo was eliminated (data type varbinary cannot participate in a columnstore index)\r\n\r\nCREATE TABLE [wwi].[DimStockItem](\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[WWIStockItemID] [int] NOT NULL,\r\n\t[Stock Item] [nvarchar](100) NOT NULL,\r\n\t[Color] [nvarchar](20) NOT NULL,\r\n\t[SellingPackage] [nvarchar](50) NOT NULL,\r\n\t[Buying Package] [nvarchar](50) NOT NULL,\r\n\t[Brand] [nvarchar](50) NOT NULL,\r\n\t[Size] [nvarchar](20) NOT NULL,\r\n\t[LeadTimeDays] [int] NOT NULL,\r\n\t[QuantityPerOuter] [int] NOT NULL,\r\n\t[IsChillerStock] [bit] NOT NULL,\r\n\t[Barcode] [nvarchar](50) NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[RecommendedRetailPrice] [decimal](18, 2) NULL,\r\n\t[TypicalWeightPerUnit] [decimal](18, 3) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimSupplier', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimSupplier\r\nGO\r\n\r\n\r\nCREATE TABLE [wwi].[DimSupplier](\r\n\t[SupplierKey] [int] NOT NULL,\r\n\t[WWISupplierID] [int] NOT NULL,\r\n\t[Supplier] [nvarchar](100) NOT NULL,\r\n\t[Category] [nvarchar](50) NOT NULL,\r\n\t[PrimaryContact] [nvarchar](50) NOT NULL,\r\n\t[SupplierReference] [nvarchar](20) NULL,\r\n\t[PaymentDays] [int] NOT NULL,\r\n\t[PostalCode] [nvarchar](10) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimTransactionType', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimTransactionType\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimTransactionType](\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[WWITransactionTypeID] [int] NOT NULL,\r\n\t[TransactionType] [nvarchar](50) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactMovement', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactMovement\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactMovement](\r\n\t[MovementKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NULL,\r\n\t[SupplierKey] [int] NULL,\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[WWIStockItemTransactionID] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactOrder', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactOrder\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactOrder](\r\n\t[OrderKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[OrderDateKey] [date] NOT NULL,\r\n\t[PickedDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[PickerKey] [int] NULL,\r\n\t[WWIOrderID] [int] NOT NULL,\r\n\t[WWIBackorderID] [int] NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactPurchase', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactPurchase\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactPurchase](\r\n\t[PurchaseKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[SupplierKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[OrderedOuters] [int] NOT NULL,\r\n\t[OrderedQuantity] [int] NOT NULL,\r\n\t[ReceivedOuters] [int] NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[IsOrderFinalized] [bit] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([SupplierKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactSale', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactSale\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactSale](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi_perf.FactSale_Slow', 'U') IS NOT NULL\r\n    DROP TABLE wwi_perf.FactSale\r\nGO\r\n\r\nCREATE TABLE [wwi_perf].[FactSale_Slow](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = ROUND_ROBIN,\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi_perf.FactSale_Fast', 'U') IS NOT NULL\r\n    DROP TABLE wwi_perf.FactSale_Fast\r\nGO\r\n\r\nCREATE TABLE [wwi_perf].[FactSale_Fast](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactStockHolding', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactStockHolding\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactStockHolding](\r\n\t[StockHoldingKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[QuantityOnHand] [int] NOT NULL,\r\n\t[BinLocation] [nvarchar](20) NOT NULL,\r\n\t[LastStocktakeQuantity] [int] NOT NULL,\r\n\t[LastCostPrice] [decimal](18, 2) NOT NULL,\r\n\t[ReorderLevel] [int] NOT NULL,\r\n\t[TargetStockLevel] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([StockItemKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactTransaction', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactTransaction\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactTransaction](\r\n\t[TransactionKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[CustomerKey] [int] NULL,\r\n\t[BillToCustomerKey] [int] NULL,\r\n\t[SupplierKey] [int] NULL,\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[PaymentMethodKey] [int] NULL,\r\n\t[WWICustomerTransaction ID] [int] NULL,\r\n\t[WWISupplierTransaction ID] [int] NULL,\r\n\t[WWIInvoiceID] [int] NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[SupplierInvoiceNumber] [nvarchar](20) NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[OutstandingBalance] [decimal](18, 2) NOT NULL,\r\n\t[IsFinalized] [bit] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 2 - Bonus Notebook with CSharp')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "csharp"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/530679ad-9ffd-4ae6-a38b-207c37db3e87/resourceGroups/Synapse-AIAD-471731/providers/Microsoft.Synapse/workspaces/asaworkspace471731/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace471731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"// Configure the connection to the data lake\n",
							"var adlsPath = \"abfss://wwi@asadatalake471731.dfs.core.windows.net\";"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"// Import the sales data from the data lake\n",
							"var sales = spark.Read().Option(\"header\", \"true\").Option(\"inferSchema\", \"true\").Option(\"sep\", \"|\").Csv($\"{adlsPath}/factsale-csv/2012/Q4\");\n",
							"sales.Show(5);\n",
							"sales.PrintSchema();"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"using System;\n",
							"using System.Collections.Generic;\n",
							"\n",
							"// Set up a JDBC connection to Azure Synapse Analytics\n",
							"var jdbcUsername = \"asa.sql.staging@asaworkspace471731\";\n",
							"var jdbcPassword = \"password.1!!\";\n",
							"var jdbcConnectionString = $\"jdbc:sqlserver://asaworkspace471731.sql.azuresynapse.net:1433;database=SQLPool01;\";\n",
							"\n",
							"// Set target table name\n",
							"var tableName = $\"wwi_staging.Sale_CSharp\";\n",
							"\n",
							"// Write the retrieved sales data into a staging table in Azure Synapse Analytics.\n",
							"sales\n",
							"    .Limit(1500)\n",
							"    .Write()\n",
							"    .Format(\"jdbc\")\n",
							"    .Options(\n",
							"        new Dictionary<string, string>\n",
							"        {\n",
							"            {\"url\", jdbcConnectionString},\n",
							"            {\"dbtable\", tableName},\n",
							"            {\"user\", jdbcUsername},\n",
							"            {\"password\", jdbcPassword},\n",
							"            {\"encrypt\", \"false\"},\n",
							"            {\"trustServerCertificate\", \"true\"},\n",
							"            {\"createTableColumnTypes\", \"DeliveryDateKey VARCHAR(50), Description VARCHAR(100), Package VARCHAR(50)\"} // Override the column types for string values. They are assigned nvarchar(max) by default, and that is not compatible with columnstore index.\n",
							"        }\n",
							"    )\n",
							"    .Mode(\"append\")\n",
							"    .Save();"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Model Training')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/530679ad-9ffd-4ae6-a38b-207c37db3e87/resourceGroups/Synapse-AIAD-471731/providers/Microsoft.Synapse/workspaces/asaworkspace471731/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace471731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Model training and registration\n",
							"This notebook show the process for training the model, converting the model to ONNX and uploading the ONNX model to Azure Storage."
						],
						"attachments": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Explore the training data\n",
							"The following cells load the source CSV file into a Spark DataFrame and create a temporary view that can be used to query the data with Spark SQL.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.read.load('abfss://dev@asadatalake387155.dfs.core.windows.net/bronze/wwi-factsale.csv', format=\"csv\"\n",
							"## If header exists uncomment line bellow\n",
							", header=True, sep=\"|\"\n",
							")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"source": [
							"df.createOrReplaceTempView(\"facts\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"display(spark.sql(\"SELECT * FROM facts WHERE `Customer Key` == '11' ORDER BY `Stock Item Key`\"))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Predict Quantity given Customer Key and Stock Item Key\n",
							"In the following cells we load a subset of the data that just contains the fields needed for training. \n",
							"\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.functions import col\n",
							"df3 = spark.sql(\"SELECT double(`Customer Key`) as customerkey, double(`Stock Item Key`) as stockitemkey, double(`Quantity`) as quantity FROM facts\").where(col(\"quantity\").isNotNull())\n",
							"df3.cache()\n",
							"print(\"Number of records:\", df3.count())\n",
							"df3.show(10)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now, we split our DataFrame into training and testing DataFrames.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"trainingFraction = 0.7\n",
							"testingFraction = (1-trainingFraction)\n",
							"seed = 42\n",
							"\n",
							"# Split the dataframe into test and training dataframes\n",
							"df_train, df_test = df3.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 39
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next, we package the data into the format expected by SPark ML's LinearRegression. It requires a DataFrame with two columns- `features` and a column with the labels to predict (`quantity` in this case).\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.ml.feature import VectorAssembler\n",
							"\n",
							"vectorAssembler = VectorAssembler(inputCols = ['customerkey', 'stockitemkey'], outputCol = 'features')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"In the following cell, we create the LinearRegression model."
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml.regression import LinearRegression\n",
							"\n",
							"lin_reg = LinearRegression(featuresCol = 'features', labelCol='quantity', maxIter = 10, regParam=0.3)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Next, we build the training pipeline."
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml import Pipeline\n",
							"\n",
							"stages = []\n",
							"stages += [vectorAssembler]\n",
							"stages += [lin_reg]\n",
							"\n",
							"partialPipeline = Pipeline().setStages(stages)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "markdown",
						"source": [
							"In the following cell, we train our LinearRegression model.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"pipelineModel = partialPipeline.fit(df_train)\n",
							"\n",
							"print(\"Coefficients: \" + str(pipelineModel.stages[-1].coefficients))\n",
							"print(\"Intercept: \" + str(pipelineModel.stages[-1].intercept))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "markdown",
						"source": [
							"With a trained model in hand, we can use it to make predictions against the test DataFrame.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"df_pred = pipelineModel.transform(df_test)\n",
							"\n",
							"from pyspark.sql.functions import rand\n",
							"display(df_pred.select([\"quantity\",  \"prediction\"]).orderBy(rand()).limit(5))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert model to ONNX\n",
							"In the cells that follow, we convert the model to ONNX and show how an output of how ONNX represents the Spark ML model.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"from onnxmltools import convert_sparkml\n",
							"from onnxmltools.convert.common.data_types import FloatTensorType\n",
							"\n",
							"initial_types = [ \n",
							"    (\"customerkey\", FloatTensorType([1, 1])),\n",
							"    (\"stockitemkey\", FloatTensorType([1, 1]))\n",
							"]"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "code",
						"source": [
							"model_onnx = convert_sparkml(pipelineModel, 'sparkml GeneralizedLinearRegression', initial_types)\n",
							"model_onnx"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Upload the model to Azure Storage\n",
							"In the cells that follow we save the ONNX model to the storage of Spark driver node temporarily. Then we use the Azure Storage Python SDK to upload the ONNX model to Azure Storage.\n",
							""
						],
						"attachments": null
					},
					{
						"cell_type": "code",
						"source": [
							"with open(\"model.onnx\", \"wb\") as f:\n",
							"    f.write(model_onnx.SerializeToString())"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"source": [
							"connection_string = \"DefaultEndpointsProtocol=https;AccountName=asastore471731;AccountKey=hlFAWqL+iR+wFUed4aILAPHmjEg0/FlK8IQqtnP5p5Z8KLmk049NnbucP/fRvJL19JCZtmcXoxGWHCIkY2nJkw==;EndpointSuffix=core.windows.net\"\n",
							"\n",
							"from azure.storage.blob import BlobClient\n",
							"\n",
							"blob = BlobClient.from_connection_string(conn_str=connection_string, container_name=\"models\", blob_name=\"onnx/model.onnx\")\n",
							"\n",
							"with open(\"./model.onnx\", \"rb\") as data:\n",
							"    blob.upload_blob(data,overwrite=True)"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 48
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Setup - Export Sales to Data Lake')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/530679ad-9ffd-4ae6-a38b-207c37db3e87/resourceGroups/Synapse-AIAD-471731/providers/Microsoft.Synapse/workspaces/asaworkspace471731/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace471731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%%pyspark\n",
							"wwi_sales = spark \\\n",
							"    .read \\\n",
							"    .option(\"sep\",\"|\") \\\n",
							"    .load('abfss://dev@asadatalake471731.dfs.core.windows.net/bronze/wwi-factsale.csv', format=\"csv\", header=True)\n",
							"\n",
							"wwi_sales = wwi_sales \\\n",
							"    .withColumnRenamed('Sale Key', 'SaleKey') \\\n",
							"    .withColumnRenamed('City Key', 'CityKey') \\\n",
							"    .withColumnRenamed('Customer Key', 'CustomerKey') \\\n",
							"    .withColumnRenamed('Bill To Customer Key', 'BillToCustomerKey') \\\n",
							"    .withColumnRenamed('Stock Item Key', 'StockItemKey') \\\n",
							"    .withColumnRenamed('Invoice Date Key', 'InvoiceDateKey') \\\n",
							"    .withColumnRenamed('Delivery Date Key', 'DeliveryDateKey') \\\n",
							"    .withColumnRenamed('Salesperson Key', 'SalespersonKey') \\\n",
							"    .withColumnRenamed('WWI Invoice ID', 'WWIInvoiceID') \\\n",
							"    .withColumnRenamed('Description', 'Description') \\\n",
							"    .withColumnRenamed('Package', 'Package') \\\n",
							"    .withColumnRenamed('Quantity', 'Quantity') \\\n",
							"    .withColumnRenamed('Unit Price', 'UnitPrice') \\\n",
							"    .withColumnRenamed('Tax Rate', 'TaxRate') \\\n",
							"    .withColumnRenamed('Total Excluding Tax', 'TotalExcludingTax') \\\n",
							"    .withColumnRenamed('Tax Amount', 'TaxAmount') \\\n",
							"    .withColumnRenamed('Profit', 'Profit') \\\n",
							"    .withColumnRenamed('Total Including Tax', 'TotalIncludingTax') \\\n",
							"    .withColumnRenamed('Total Dry Items', 'TotalDryItems') \\\n",
							"    .withColumnRenamed('Total Chiller Items', 'TotalChillerItems') \\\n",
							"    .withColumnRenamed('Lineage Key', 'LineageKey')"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"import numpy as np\n",
							"from datetime import datetime\n",
							"from dateutil.relativedelta import relativedelta"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Export WWI sales data to parquet files\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"quarters = 20\n",
							"start_date = datetime(2012, 1, 1)\n",
							"\n",
							"for quarter in np.arange(1, quarters + 1):\n",
							"\n",
							"    quarter_number = 4 if quarter % 4 == 0 else quarter % 4\n",
							"    end_date = start_date + relativedelta(months=3) + relativedelta(days=-1)\n",
							"    \n",
							"    print(f'Exporting data for {start_date.year} Q{quarter_number} ({start_date:%Y-%m-%d} : {end_date:%Y-%m-%d}) ...')\n",
							"\n",
							"    storage_path_parquet = f'abfss://wwi@asadatalake471731.dfs.core.windows.net/factsale-parquet/{start_date.year}/Q{quarter_number}'\n",
							"\n",
							"    wwi_sales \\\n",
							"        .where((wwi_sales['InvoiceDateKey'] >= f'{start_date:%Y-%m-%d}') & (wwi_sales['InvoiceDateKey'] <= f'{end_date:%Y-%m-%d}')) \\\n",
							"        .write \\\n",
							"        .partitionBy('InvoiceDateKey') \\\n",
							"        .mode(\"overwrite\") \\\n",
							"        .parquet(storage_path_parquet)\n",
							"\n",
							"    start_date = end_date + relativedelta(days=1)"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Export WWI sales data to CSV files\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"quarters = 20\n",
							"start_date = datetime(2012, 1, 1)\n",
							"\n",
							"for quarter in np.arange(1, quarters + 1):\n",
							"\n",
							"    quarter_number = 4 if quarter % 4 == 0 else quarter % 4\n",
							"    end_date = start_date + relativedelta(months=3) + relativedelta(days=-1)\n",
							"    \n",
							"    print(f'Exporting data for {start_date.year} Q{quarter_number} ({start_date:%Y-%m-%d} : {end_date:%Y-%m-%d}) ...')\n",
							"\n",
							"    storage_path_csv = f'abfss://wwi@asadatalake471731.dfs.core.windows.net/factsale-csv/{start_date.year}/Q{quarter_number}'\n",
							"\n",
							"    wwi_sales \\\n",
							"        .where((wwi_sales['InvoiceDateKey'] >= f'{start_date:%Y-%m-%d}') & (wwi_sales['InvoiceDateKey'] <= f'{end_date:%Y-%m-%d}')) \\\n",
							"        .write \\\n",
							"        .partitionBy('InvoiceDateKey') \\\n",
							"        .mode(\"overwrite\") \\\n",
							"        .option(\"quote\", \"\\u0000\") \\\n",
							"        .option(\"sep\",\"|\") \\\n",
							"        .csv(storage_path_csv, header=True)\n",
							"\n",
							"    start_date = end_date + relativedelta(days=1)"
						],
						"outputs": [],
						"execution_count": 31
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task1_ExploreData')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Exercise02"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/530679ad-9ffd-4ae6-a38b-207c37db3e87/resourceGroups/Synapse-AIAD-471731/providers/Microsoft.Synapse/workspaces/asaworkspace471731/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace471731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%%spark\n",
							"\n",
							"// Set the path to read the WWI Sales files\n",
							"import org.apache.spark.sql.SparkSession\n",
							"\n",
							"// Set the path to the ADLS Gen2 account\n",
							"val adlsPath = \"abfss://wwi@asadatalake471731.dfs.core.windows.net\""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"%%spark\n",
							"\n",
							"// Read the sales into a dataframe\n",
							"val sales = spark.read.format(\"csv\").option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"sep\", \"|\").load(s\"$adlsPath/factsale-csv/2012/Q4\")\n",
							"sales.show(5)\n",
							"sales.printSchema()"
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"source": [
							"%%spark\n",
							"\n",
							"// Import libraries for the SQL Analytics connector\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\n",
							"import org.apache.spark.sql.SqlAnalyticsConnector._\n",
							"import org.apache.spark.sql.SaveMode\n",
							"\n",
							"// Set target table name\n",
							"var tableName = s\"SQLPool01.wwi_staging.Sale\"\n",
							"\n",
							"// Write the retrieved sales data into a staging table in Azure Synapse Analytics.\n",
							"sales.limit(10000).write.mode(SaveMode.Append).sqlanalytics(tableName, Constants.INTERNAL)\n",
							""
						],
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task2_Explore Data')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Exercise01/Task2"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/530679ad-9ffd-4ae6-a38b-207c37db3e87/resourceGroups/Synapse-AIAD-471731/providers/Microsoft.Synapse/workspaces/asaworkspace471731/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace471731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"## Load Directly from File\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 2,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"SaleKey"
									],
									"values": [
										"Profit"
									],
									"yLabel": "Profit",
									"xLabel": "SaleKey",
									"aggregation": "SUM",
									"aggByBackend": false,
									"series": "CityKey",
									"stacked": true,
									"isValid": true,
									"inValidMsg": null
								},
								"aggData": "{\"49036\":{\"228266\":0,\"228267\":0,\"228268\":0,\"228269\":0,\"228270\":0,\"228271\":0,\"228272\":0,\"228273\":136,\"228274\":114,\"228275\":25.5},\"75493\":{\"228266\":0,\"228267\":0,\"228268\":660,\"228269\":151.2,\"228270\":120,\"228271\":0,\"228272\":0,\"228273\":0,\"228274\":0,\"228275\":0},\"77447\":{\"228266\":68,\"228267\":68,\"228268\":0,\"228269\":0,\"228270\":0,\"228271\":0,\"228272\":0,\"228273\":0,\"228274\":0,\"228275\":0},\"92554\":{\"228266\":0,\"228267\":0,\"228268\":0,\"228269\":0,\"228270\":0,\"228271\":144,\"228272\":294,\"228273\":0,\"228274\":0,\"228275\":0}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://wwi@asadatalake471731.dfs.core.windows.net/factsale-parquet/2012/Q1/InvoiceDateKey=2012-01-01/part-00007-e289b92c-fe69-489e-b68e-6399feb116fa.c000.snappy.parquet', format='parquet')\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Load from CSV\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"SaleKey"
									],
									"values": [
										"SaleKey"
									],
									"yLabel": "SaleKey",
									"xLabel": "SaleKey",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"SaleKey\":{\"1444678\":1,\"1444679\":1,\"1444680\":1,\"1444681\":1,\"1444682\":1,\"1444683\":1,\"1444684\":1,\"1444685\":1,\"1444686\":1,\"1444687\":1,\"1444688\":1,\"1444689\":1,\"1444690\":1,\"1444691\":1,\"1444692\":1,\"1444693\":1,\"1444694\":1,\"1444695\":1,\"1444696\":1,\"1444697\":1,\"1444698\":1,\"1444699\":1,\"1444700\":1,\"1444701\":1,\"1444702\":1,\"1444703\":1,\"1444704\":1,\"1444705\":1,\"1444706\":1,\"1444707\":1,\"1444708\":1,\"1444709\":1,\"1444710\":1,\"1444711\":1,\"1444712\":1,\"1444713\":1,\"1444714\":1,\"1444715\":1,\"1444716\":1,\"1444717\":1,\"1444718\":1,\"1444719\":1,\"1444720\":1,\"1444721\":1,\"1444722\":1,\"1444723\":1,\"1444724\":1,\"1444725\":1,\"1444726\":1,\"1444727\":1,\"1444728\":1,\"1444729\":1,\"1444730\":1,\"1444731\":1,\"1444732\":1,\"1444733\":1,\"1444734\":1,\"1444735\":1,\"1444736\":1,\"1444737\":1,\"1444738\":1,\"1444739\":1,\"1444740\":1,\"1444741\":1,\"1444742\":1,\"1444743\":1,\"1444744\":1,\"1444745\":1,\"1444746\":1,\"1444747\":1,\"1444748\":1,\"1444749\":1,\"1444750\":1,\"1444751\":1,\"1444752\":1,\"1444753\":1,\"1444754\":1,\"1444755\":1,\"1444756\":1,\"1444757\":1,\"1444758\":1,\"1444759\":1,\"1444760\":1,\"1444761\":1,\"1444762\":1,\"1444763\":1,\"1444764\":1,\"1444765\":1,\"1444766\":1,\"1444767\":1,\"1444768\":1,\"1444769\":1,\"1444770\":1,\"1444771\":1,\"1444772\":1,\"1444773\":1,\"1444774\":1,\"1444775\":1,\"1444776\":1,\"1444777\":1}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"data_path = spark.read.load(\n",
							"   'abfss://wwi@asadatalake471731.dfs.core.windows.net/factsale-csv/2012/Q1/*/*',\n",
							"   format='csv',\n",
							"   sep=\"|\",\n",
							"   header=True)\n",
							"\n",
							"display(data_path.limit(100))\n",
							"\n",
							""
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "markdown",
						"source": [
							"## 13. Config Spark "
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"CityKey"
									],
									"values": [
										"TotalQuantity"
									],
									"yLabel": "TotalQuantity",
									"xLabel": "CityKey",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"TotalQuantity\":{\"44986\":328520,\"52715\":310361,\"62508\":329868,\"78038\":328874,\"81238\":328651,\"82686\":411209,\"95693\":345148,\"101061\":330250,\"110283\":306808,\"110541\":305994}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"SELECT \n",
							"    CityKey,\n",
							"    SUM(Quantity) FILTER (WHERE CustomerKey != 0) as TotalQuantity,\n",
							"    COUNT(DISTINCT StockItemKey) as UniqueItems\n",
							"FROM delta.`abfss://wwi@asadatalake471731.dfs.core.windows.net/factsale-deltalake`\n",
							"WHERE InvoiceYear=2012\n",
							"    and InvoiceQuarter=1\n",
							"GROUP BY CityKey\n",
							"ORDER BY TotalQuantity desc\n",
							"LIMIT 10\n",
							"\n",
							""
						],
						"outputs": [],
						"execution_count": 2
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPool01')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}